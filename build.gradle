plugins {
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.0"
}

group 'de.nicolasschlecker.vv'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // Serialisation
    implementation 'com.google.code.gson:gson:2.8.6'

    // Test dependencies

    // Unit Tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.mockito:mockito-inline:3.7.7'
    testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.6'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

// Do not generate reports for individual projects
jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
        csv.enabled false
        html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", project.properties['SONAR_PROJECT_KEY']
        property "sonar.host.url", project.properties['SONAR_HOST']
        property "sonar.login", project.properties['SONAR_LOGIN']
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'de.nicolasschlecker.vv.Main'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}